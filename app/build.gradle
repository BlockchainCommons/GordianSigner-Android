apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.bc.gordiansigner"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs/jni'
    }

    splits {
        abi {
            reset()
            enable project.hasProperty('splitApks')
            universalApk false // If true, also generate a universal APK
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }

    bundle {
        density {
            // Different APKs are generated for devices with different screen densities; true by default.
            enableSplit false
        }
        abi {
            // Different APKs are generated for devices with different CPU architectures; true by default.
            enableSplit true
        }
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language.
            // We're gonna use the same APK for all languages.
            enableSplit false
        }
    }

    androidExtensions {
        experimental = true
    }

    signingConfigs {

        debug {
            def keystorePropertiesFile = rootProject.file(
                    "keystores/debug.properties")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            keyAlias keystoreProperties['key.alias']
            keyPassword keystoreProperties['key.alias.password']
            storeFile file('../keystores/debug.keystore')
            storePassword keystoreProperties['key.store.password']
        }

        release {
            def keystorePropertiesFile = rootProject.file(
                    "keystores/release.properties")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            keyAlias keystoreProperties['key.alias']
            keyPassword keystoreProperties['key.alias.password']
            storeFile file('../keystores/release.keystore')
            storePassword keystoreProperties['key.store.password']
        }
    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"),
                    "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    flavorDimensions "env"

    productFlavors {

        inhouse {
            dimension "env"
            applicationIdSuffix ".inhouse"
            resValue "string", "app_name", "Gordian Signer Inhouse"
            manifestPlaceholders = [
                    appIcon                        : "@mipmap/ic_launcher",
                    appIconRound                   : "@mipmap/ic_launcher_round",
            ]
        }

        prd {
            dimension "env"
            resValue "string", "app_name", "Gordian Signer"
            manifestPlaceholders = [
                    appIcon                        : "@mipmap/ic_launcher",
                    appIconRound                   : "@mipmap/ic_launcher_round",
            ]
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Dagger
    implementation 'com.google.dagger:dagger-android:2.25.2'
    implementation 'com.google.dagger:dagger-android-support:2.25.2'
    kapt 'com.google.dagger:dagger-android-processor:2.25.2'
    kapt 'com.google.dagger:dagger-compiler:2.25.2'

    // Architecture component
    implementation "android.arch.lifecycle:livedata:2.0.0"
    implementation "android.arch.lifecycle:runtime:2.0.0"
    kapt "android.arch.lifecycle:compiler:2.0.0"

    // Rx2
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // Android security
    implementation "androidx.security:security-crypto:1.0.0-rc03"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}